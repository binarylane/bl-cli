// Code generated by MockGen. DO NOT EDIT.
// Source: servers.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	bl "github.com/binarylane/bl-cli/bl"
	binarylane "github.com/binarylane/go-binarylane"
	gomock "github.com/golang/mock/gomock"
)

// MockServersService is a mock of ServersService interface.
type MockServersService struct {
	ctrl     *gomock.Controller
	recorder *MockServersServiceMockRecorder
}

// MockServersServiceMockRecorder is the mock recorder for MockServersService.
type MockServersServiceMockRecorder struct {
	mock *MockServersService
}

// NewMockServersService creates a new mock instance.
func NewMockServersService(ctrl *gomock.Controller) *MockServersService {
	mock := &MockServersService{ctrl: ctrl}
	mock.recorder = &MockServersServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServersService) EXPECT() *MockServersServiceMockRecorder {
	return m.recorder
}

// List mocks base method.
func (m *MockServersService) List() (bl.Servers, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List")
	ret0, _ := ret[0].(bl.Servers)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockServersServiceMockRecorder) List() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockServersService)(nil).List))
}

// ListByTag mocks base method.
func (m *MockServersService) ListByTag(arg0 string) (bl.Servers, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListByTag", arg0)
	ret0, _ := ret[0].(bl.Servers)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListByTag indicates an expected call of ListByTag.
func (mr *MockServersServiceMockRecorder) ListByTag(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListByTag", reflect.TypeOf((*MockServersService)(nil).ListByTag), arg0)
}

// Get mocks base method.
func (m *MockServersService) Get(arg0 int) (*bl.Server, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*bl.Server)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockServersServiceMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockServersService)(nil).Get), arg0)
}

// Create mocks base method.
func (m *MockServersService) Create(arg0 *binarylane.ServerCreateRequest, arg1 bool) (*bl.Server, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(*bl.Server)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockServersServiceMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockServersService)(nil).Create), arg0, arg1)
}

// CreateMultiple mocks base method.
func (m *MockServersService) CreateMultiple(arg0 *binarylane.ServerMultiCreateRequest) (bl.Servers, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMultiple", arg0)
	ret0, _ := ret[0].(bl.Servers)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateMultiple indicates an expected call of CreateMultiple.
func (mr *MockServersServiceMockRecorder) CreateMultiple(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMultiple", reflect.TypeOf((*MockServersService)(nil).CreateMultiple), arg0)
}

// Delete mocks base method.
func (m *MockServersService) Delete(arg0 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockServersServiceMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockServersService)(nil).Delete), arg0)
}

// DeleteByTag mocks base method.
func (m *MockServersService) DeleteByTag(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteByTag", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteByTag indicates an expected call of DeleteByTag.
func (mr *MockServersServiceMockRecorder) DeleteByTag(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteByTag", reflect.TypeOf((*MockServersService)(nil).DeleteByTag), arg0)
}

// Kernels mocks base method.
func (m *MockServersService) Kernels(arg0 int) (bl.Kernels, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Kernels", arg0)
	ret0, _ := ret[0].(bl.Kernels)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Kernels indicates an expected call of Kernels.
func (mr *MockServersServiceMockRecorder) Kernels(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Kernels", reflect.TypeOf((*MockServersService)(nil).Kernels), arg0)
}

// Snapshots mocks base method.
func (m *MockServersService) Snapshots(arg0 int) (bl.Images, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Snapshots", arg0)
	ret0, _ := ret[0].(bl.Images)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Snapshots indicates an expected call of Snapshots.
func (mr *MockServersServiceMockRecorder) Snapshots(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Snapshots", reflect.TypeOf((*MockServersService)(nil).Snapshots), arg0)
}

// Backups mocks base method.
func (m *MockServersService) Backups(arg0 int) (bl.Images, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Backups", arg0)
	ret0, _ := ret[0].(bl.Images)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Backups indicates an expected call of Backups.
func (mr *MockServersServiceMockRecorder) Backups(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Backups", reflect.TypeOf((*MockServersService)(nil).Backups), arg0)
}

// Actions mocks base method.
func (m *MockServersService) Actions(arg0 int) (bl.Actions, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Actions", arg0)
	ret0, _ := ret[0].(bl.Actions)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Actions indicates an expected call of Actions.
func (mr *MockServersServiceMockRecorder) Actions(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Actions", reflect.TypeOf((*MockServersService)(nil).Actions), arg0)
}

// Neighbors mocks base method.
func (m *MockServersService) Neighbors(arg0 int) (bl.Servers, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Neighbors", arg0)
	ret0, _ := ret[0].(bl.Servers)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Neighbors indicates an expected call of Neighbors.
func (mr *MockServersServiceMockRecorder) Neighbors(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Neighbors", reflect.TypeOf((*MockServersService)(nil).Neighbors), arg0)
}
