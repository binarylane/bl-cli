// Code generated by MockGen. DO NOT EDIT.
// Source: image_actions.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	bl "github.com/binarylane/bl-cli/bl"
	binarylane "github.com/binarylane/go-binarylane"
	gomock "github.com/golang/mock/gomock"
)

// MockImageActionsService is a mock of ImageActionsService interface.
type MockImageActionsService struct {
	ctrl     *gomock.Controller
	recorder *MockImageActionsServiceMockRecorder
}

// MockImageActionsServiceMockRecorder is the mock recorder for MockImageActionsService.
type MockImageActionsServiceMockRecorder struct {
	mock *MockImageActionsService
}

// NewMockImageActionsService creates a new mock instance.
func NewMockImageActionsService(ctrl *gomock.Controller) *MockImageActionsService {
	mock := &MockImageActionsService{ctrl: ctrl}
	mock.recorder = &MockImageActionsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockImageActionsService) EXPECT() *MockImageActionsServiceMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockImageActionsService) Get(arg0, arg1 int) (*bl.Action, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*bl.Action)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockImageActionsServiceMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockImageActionsService)(nil).Get), arg0, arg1)
}

// Convert mocks base method.
func (m *MockImageActionsService) Convert(arg0 int) (*bl.Action, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Convert", arg0)
	ret0, _ := ret[0].(*bl.Action)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Convert indicates an expected call of Convert.
func (mr *MockImageActionsServiceMockRecorder) Convert(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Convert", reflect.TypeOf((*MockImageActionsService)(nil).Convert), arg0)
}

// Transfer mocks base method.
func (m *MockImageActionsService) Transfer(arg0 int, arg1 *binarylane.ActionRequest) (*bl.Action, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Transfer", arg0, arg1)
	ret0, _ := ret[0].(*bl.Action)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Transfer indicates an expected call of Transfer.
func (mr *MockImageActionsServiceMockRecorder) Transfer(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Transfer", reflect.TypeOf((*MockImageActionsService)(nil).Transfer), arg0, arg1)
}
